package pl.polsl.biai.view;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import pl.polsl.biai.controller.TheTravellingSalesmanProblem;

/**
 *
 * @author Miler
 */
public class TheTravellingSalesmanGUI extends javax.swing.JFrame {

    private int numberOfCities;

    private int populationSizeInt;

    private double mutationRate;

    private int generations;

    private boolean citiesGenerated;

    private final TheTravellingSalesmanProblem tsp;

    private String path;

    private String fileName;

    private int repeat;

    private boolean newPopulation;

    private String logFileName;
    
    private boolean allGraphs;
    
    private boolean elitism;

    /**
     * Creates new form TheTravellingSalesmanGUI
     */
    public TheTravellingSalesmanGUI() {
        initComponents();
        tsp = new TheTravellingSalesmanProblem();
        numberOfCities = 0;
        populationSizeInt = 0;
        citiesGenerated = false;
        path = null;
        fileName = null;
        mutationRate = 0.015;
        generations = 100;
        repeat = 1;
        elitism = false;
        newPopulation = true;
        radioGroup.add(yesBtn);
        radioGroup.add(noBtn);
        graphGroup.add(allGraph);
        graphGroup.add(lastGraph);
        logFileName = null;
        allGraphs = true;
        elitismGroup.add(yesBtn1);
        elitismGroup.add(noBtn1);
    }

    public void registerLogStart() {
        FileWriter fileWriter;
        String source = null;
        try {
            fileWriter = new FileWriter(logFileName, true);
            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
            bufferedWriter.write("New start od the algorithm: " + LocalDateTime.now());
            bufferedWriter.newLine();
            if (openedLabel.getText().equals("Opened")) {
                source = "opened from file";
            }
            if (generatedLabel.getText().equals("Generated")) {
                source = "randomly generated";
            }
            bufferedWriter.write("Cities were " + source);
            bufferedWriter.newLine();
            bufferedWriter.write("-- Operation parameters --");
            bufferedWriter.newLine();
            bufferedWriter.write("Number of cities: " + numberOfCities);
            bufferedWriter.newLine();
            bufferedWriter.write("Population size: " + populationSizeInt);
            bufferedWriter.newLine();
            bufferedWriter.write("Mutation rate: " + mutationRate);
            bufferedWriter.newLine();
            bufferedWriter.write("Number of generations: " + generations);
            bufferedWriter.newLine();
            bufferedWriter.write("Operation was repeated " + repeat + " time");
            bufferedWriter.newLine();
            bufferedWriter.write("Generated new population: " + newPopulation);
            bufferedWriter.newLine();
            bufferedWriter.close();
        } catch (IOException e) {
        }
    }

    public void registerLogEnd() {
        FileWriter fileWriter;
        try {
            fileWriter = new FileWriter(logFileName, true);
            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
            bufferedWriter.write("End of the algorithm" + LocalDateTime.now());
            bufferedWriter.newLine();
            bufferedWriter.newLine();
            bufferedWriter.close();
        } catch (IOException e) {
        }

    }

    public String readFile(String filePath) throws IOException {
        FileReader fileReader;
        try {
            fileReader = new FileReader(filePath);
            BufferedReader bufferedReader = new BufferedReader(fileReader);
            String file = "";
            String textLine = bufferedReader.readLine();
            do {
                file += textLine + ";";
                textLine = bufferedReader.readLine();
            } while (textLine != null);

            bufferedReader.close();
            return file;
        } catch (FileNotFoundException e) {
            return "Error";
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioGroup = new javax.swing.ButtonGroup();
        graphGroup = new javax.swing.ButtonGroup();
        elitismGroup = new javax.swing.ButtonGroup();
        startPanel = new javax.swing.JPanel();
        startBtn = new javax.swing.JButton();
        citiesLabel = new javax.swing.JLabel();
        citiesNumber = new javax.swing.JTextField();
        generateBtn = new javax.swing.JButton();
        openBtn = new javax.swing.JButton();
        openedLabel = new javax.swing.JLabel();
        generatedLabel = new javax.swing.JLabel();
        popSizeLabel = new javax.swing.JLabel();
        populationSize = new javax.swing.JTextField();
        finalLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        resultDistance = new javax.swing.JTextField();
        initialLabel = new javax.swing.JLabel();
        initialDistance = new javax.swing.JTextField();
        mutationLabel = new javax.swing.JLabel();
        mutation = new javax.swing.JTextField();
        generationsField = new javax.swing.JTextField();
        tournamentLabel1 = new javax.swing.JLabel();
        repeatLabel = new javax.swing.JLabel();
        repeatText = new javax.swing.JTextField();
        populationsLabel = new javax.swing.JLabel();
        yesBtn = new javax.swing.JRadioButton();
        noBtn = new javax.swing.JRadioButton();
        allGraph = new javax.swing.JRadioButton();
        lastGraph = new javax.swing.JRadioButton();
        graphLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        yesBtn1 = new javax.swing.JRadioButton();
        noBtn1 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TSP");

        startBtn.setText("Start");
        startBtn.setPreferredSize(new java.awt.Dimension(70, 30));
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        citiesLabel.setText("Number of cities");

        generateBtn.setText("Generate random cities");
        generateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateBtnActionPerformed(evt);
            }
        });

        openBtn.setText("Open from file");
        openBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openBtnActionPerformed(evt);
            }
        });

        popSizeLabel.setText("Population size");

        finalLabel.setText("Final distance");

        resultDistance.setText("Result");
        resultDistance.setFocusable(false);

        initialLabel.setText("Initial distance");

        initialDistance.setText("Result");
        initialDistance.setFocusable(false);

        mutationLabel.setText("Mutation rate");

        mutation.setText("0.015");

        generationsField.setText("100");

        tournamentLabel1.setText("Generations");

        repeatLabel.setText("Repeat");

        repeatText.setText("1");

        populationsLabel.setText("New population");

        yesBtn.setSelected(true);
        yesBtn.setText("Yes");

        noBtn.setText("No");

        allGraph.setSelected(true);
        allGraph.setText("All");

        lastGraph.setText("Last");

        graphLabel.setText("Graph show");

        jLabel1.setText("Elitism");

        yesBtn1.setSelected(true);
        yesBtn1.setText("Yes");

        noBtn1.setText("No");

        javax.swing.GroupLayout startPanelLayout = new javax.swing.GroupLayout(startPanel);
        startPanel.setLayout(startPanelLayout);
        startPanelLayout.setHorizontalGroup(
            startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, startPanelLayout.createSequentialGroup()
                        .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(popSizeLabel)
                            .addComponent(mutationLabel))
                        .addGap(20, 20, 20)
                        .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(startPanelLayout.createSequentialGroup()
                                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(startPanelLayout.createSequentialGroup()
                                        .addComponent(mutation, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1))
                                    .addGroup(startPanelLayout.createSequentialGroup()
                                        .addGap(190, 190, 190)
                                        .addComponent(yesBtn1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(noBtn1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(startPanelLayout.createSequentialGroup()
                                .addComponent(populationSize, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(openedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(generatedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, startPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(openBtn)
                        .addGap(18, 18, 18)
                        .addComponent(generateBtn)
                        .addGap(104, 104, 104))
                    .addGroup(startPanelLayout.createSequentialGroup()
                        .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(startPanelLayout.createSequentialGroup()
                                .addComponent(citiesLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(citiesNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(startPanelLayout.createSequentialGroup()
                                .addComponent(initialLabel)
                                .addGap(34, 34, 34)
                                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(initialDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(resultDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(startPanelLayout.createSequentialGroup()
                                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tournamentLabel1)
                                    .addComponent(repeatLabel))
                                .addGap(25, 25, 25)
                                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(generationsField, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                                    .addComponent(repeatText))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(184, 184, 184))
            .addGroup(startPanelLayout.createSequentialGroup()
                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(startPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(finalLabel))
                    .addGroup(startPanelLayout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(startPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(populationsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(yesBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(noBtn)
                        .addGap(18, 18, 18)
                        .addComponent(graphLabel)
                        .addGap(6, 6, 6)
                        .addComponent(allGraph)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lastGraph)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        startPanelLayout.setVerticalGroup(
            startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, startPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(citiesLabel)
                    .addComponent(citiesNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(startPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(openBtn)
                            .addComponent(generateBtn)))
                    .addGroup(startPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(generatedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(openedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(8, 8, 8)
                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(popSizeLabel)
                    .addComponent(populationSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mutationLabel)
                    .addComponent(mutation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(generationsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tournamentLabel1))
                    .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(yesBtn1)
                        .addComponent(noBtn1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(repeatLabel)
                    .addComponent(repeatText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(populationsLabel)
                    .addComponent(yesBtn)
                    .addComponent(noBtn)
                    .addComponent(allGraph)
                    .addComponent(lastGraph)
                    .addComponent(graphLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(initialLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(initialDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalLabel)
                    .addComponent(resultDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openBtnActionPerformed
        JFileChooser c = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        c.setFileFilter(filter);
        // Demonstrate "Open" dialog:
        int rVal = c.showOpenDialog(TheTravellingSalesmanGUI.this);
        if (rVal == JFileChooser.APPROVE_OPTION) {
            fileName = c.getSelectedFile().getName();
            path = c.getCurrentDirectory().toString();
        }

        // load from file
        String filePath = path + "\\" + fileName;
        boolean readed = false;
        try {
            String file = readFile(filePath);
            readed = tsp.initTravelListFromFile(file);
            this.numberOfCities = tsp.getSize();
        } catch (Exception e) {
        }

        if (readed) {
            citiesGenerated = true;
            generatedLabel.setText("");
            openedLabel.setText("Opened");
        }
    }//GEN-LAST:event_openBtnActionPerformed

    private void generateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBtnActionPerformed
        if (!citiesNumber.getText().isEmpty()) {
            try {
                numberOfCities = Integer.parseInt(citiesNumber.getText());
                tsp.generateRandomCities(numberOfCities);
                openedLabel.setText("");
                generatedLabel.setText("Generated");
                citiesGenerated = true;
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_generateBtnActionPerformed


    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        if (!populationSize.getText().isEmpty() && citiesGenerated) {
            try {
                populationSizeInt = Integer.parseInt(populationSize.getText());
                if (!mutation.getText().isEmpty()) {
                    mutationRate = Double.parseDouble(mutation.getText());
                }
                if (!generationsField.getText().isEmpty()) {
                    generations = Integer.parseInt(generationsField.getText());
                }
                if (!repeatText.getText().isEmpty()) {
                    repeat = Integer.parseInt(repeatText.getText());
                }
                if (yesBtn.isSelected()) {
                    newPopulation = true;
                }
                if (noBtn.isSelected()) {
                    newPopulation = false;
                }
                if(allGraph.isSelected())
                    allGraphs = true;
                if(lastGraph.isSelected())
                    allGraphs = false;
                if(yesBtn1.isSelected())
                    elitism = true;
                if(noBtn1.isSelected())
                    elitism = false;
                logFileName = "log" + LocalDateTime.now().getDayOfMonth() + LocalDateTime.now().getMonth() + 
                        LocalDateTime.now().getYear() + "-" + LocalDateTime.now().getHour() + 
                        LocalDateTime.now().getMinute() + LocalDateTime.now().getSecond() + ".txt";
                registerLogStart();
                for (int i = 0; i < repeat; i++) {
                    if(allGraphs) {
                        GraphGUI.drawGraph(tsp.initAlgorithm(populationSizeInt, mutationRate,
                            generations, newPopulation, repeat, i, logFileName, 
                            resultDistance, initialDistance, elitism));
                    } else {
                        if(i!=repeat-1) {
                            tsp.initAlgorithm(populationSizeInt, mutationRate,
                            generations, newPopulation, repeat, i, logFileName, 
                            resultDistance, initialDistance, elitism);
                        } else {
                            GraphGUI.drawGraph(tsp.initAlgorithm(populationSizeInt, mutationRate,
                                generations, newPopulation, repeat, i, logFileName, 
                                resultDistance, initialDistance, elitism));
                         
                        }
                    }
                }
                registerLogEnd();
                openedLabel.setText("");
                generatedLabel.setText("");
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_startBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TheTravellingSalesmanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TheTravellingSalesmanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TheTravellingSalesmanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TheTravellingSalesmanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TheTravellingSalesmanGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton allGraph;
    private javax.swing.JLabel citiesLabel;
    private javax.swing.JTextField citiesNumber;
    private javax.swing.ButtonGroup elitismGroup;
    private javax.swing.JLabel finalLabel;
    private javax.swing.JButton generateBtn;
    private javax.swing.JLabel generatedLabel;
    private javax.swing.JTextField generationsField;
    private javax.swing.ButtonGroup graphGroup;
    private javax.swing.JLabel graphLabel;
    private javax.swing.JTextField initialDistance;
    private javax.swing.JLabel initialLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton lastGraph;
    private javax.swing.JTextField mutation;
    private javax.swing.JLabel mutationLabel;
    private javax.swing.JRadioButton noBtn;
    private javax.swing.JRadioButton noBtn1;
    private javax.swing.JButton openBtn;
    private javax.swing.JLabel openedLabel;
    private javax.swing.JLabel popSizeLabel;
    private javax.swing.JTextField populationSize;
    private javax.swing.JLabel populationsLabel;
    private javax.swing.ButtonGroup radioGroup;
    private javax.swing.JLabel repeatLabel;
    private javax.swing.JTextField repeatText;
    private javax.swing.JTextField resultDistance;
    private javax.swing.JButton startBtn;
    private javax.swing.JPanel startPanel;
    private javax.swing.JLabel tournamentLabel1;
    private javax.swing.JRadioButton yesBtn;
    private javax.swing.JRadioButton yesBtn1;
    // End of variables declaration//GEN-END:variables
}
